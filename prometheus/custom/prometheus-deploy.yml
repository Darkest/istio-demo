apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: "custom-prom-sa"
      containers:
        - name: prometheus
          image: prom/prometheus:v2.19.3
          args:
            - "--config.file=/etc/prometheus/prom-config.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.enable-lifecycle"
          securityContext:
            fsGroup: 65534
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          ports:
            - containerPort: 9090
              name: http
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - mountPath: /etc/istio-certs
              name: istio-certs
      volumes:
        - name: config-volume
          configMap:
            name: custom-prometheus
        - name: istio-certs
          secret:
            defaultMode: 420
            optional: true
            secretName: istio.custom-prom-sa
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
spec:
  selector:
    app: prometheus
  type: LoadBalancer
  ports:
    - port: 9090
      targetPort: 9090
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: prometheus-route
spec:
  host: custom-prom.apps-crc.testing
  to:
    kind: Service
    name: prometheus-service
    weight: 100
  port:
    targetPort: 9090